{
  "status": "SUCCESS",
  "data": [
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    z__divider_0,\n    aws_tags_value,\n    z__divider_1,\n    aws_resourceid,\n    aws_totalcost_1\nFROM\n    (SELECT\n            CASE WHEN (aws_tags.value ) IS NULL THEN 0 ELSE 1 END AS z__divider_0,\n            aws_tags.value  AS aws_tags_value,\n                CASE WHEN (aws.resourceid ) IS NULL THEN 0 ELSE 1 END AS z__divider_1,\n            aws.resourceid  AS aws_resourceid,\n            ROUND(COALESCE(CAST( ( SUM(DISTINCT (CAST(ROUND(COALESCE(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  \n            aws.unblendedcost\n            ELSE NULL END\n,0)*(1/1000*1.0), 9) AS NUMERIC) + (cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 1, 15)) as int64) as numeric) * 4294967296 + cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 16, 8)) as int64) as numeric)) * 0.000000001 )) - SUM(DISTINCT (cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 1, 15)) as int64) as numeric) * 4294967296 + cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 16, 8)) as int64) as numeric)) * 0.000000001) )  / (1/1000*1.0) AS FLOAT64), 0), 6) AS aws_totalcost_1\n        FROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \n        WHERE (\n            aws.productname\n          ) = 'Amazon MQ' AND (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) = 'AWS_TEG' AND (aws_tags.key ) IN ('user_Product', 'user_product') AND (\n        true\n    )\n        GROUP BY\n            ROLLUP(z__divider_0, aws_tags_value, z__divider_1, aws_resourceid)\n        ORDER BY\n            z__divider_0 IS NULL,\n            z__divider_0,\n            2,\n            5 DESC,\n            z__divider_1 IS NULL,\n            z__divider_1,\n            4\n        LIMIT 2000) AS t5",
      "cost": 5.14719744,
      "runtime": 4.1
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    z__divider_0,\n    aws_tags_value,\n    z__divider_1,\n    aws_resourceid,\n    aws_totalcost_1\nFROM\n    (SELECT\n            CASE WHEN (aws_tags.value ) IS NULL THEN 0 ELSE 1 END AS z__divider_0,\n            aws_tags.value  AS aws_tags_value,\n                CASE WHEN (aws.resourceid ) IS NULL THEN 0 ELSE 1 END AS z__divider_1,\n            aws.resourceid  AS aws_resourceid,\n            ROUND(COALESCE(CAST( ( SUM(DISTINCT (CAST(ROUND(COALESCE(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '30' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY), INTERVAL '30' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  \n            aws.unblendedcost\n            ELSE NULL END\n,0)*(1/1000*1.0), 9) AS NUMERIC) + (cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '30' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY), INTERVAL '30' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 1, 15)) as int64) as numeric) * 4294967296 + cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '30' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY), INTERVAL '30' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 16, 8)) as int64) as numeric)) * 0.000000001 )) - SUM(DISTINCT (cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '30' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY), INTERVAL '30' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 1, 15)) as int64) as numeric) * 4294967296 + cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '30' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '30' DAY), INTERVAL '30' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 16, 8)) as int64) as numeric)) * 0.000000001) )  / (1/1000*1.0) AS FLOAT64), 0), 6) AS aws_totalcost_1\n        FROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \n        WHERE (\n            aws.productname\n          ) = 'Amazon Relational Database Service' AND (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) IN ('AWS_TEG', 'aws_cloudplatform_prod@tylertech.com') AND (aws_tags.key ) IN ('user_Product', 'user_product') AND (\n        true\n    )\n        GROUP BY\n            ROLLUP(z__divider_0, aws_tags_value, z__divider_1, aws_resourceid)\n        ORDER BY\n            z__divider_0 IS NULL,\n            z__divider_0,\n            2,\n            5 DESC,\n            z__divider_1 IS NULL,\n            z__divider_1,\n            4\n        LIMIT 2000) AS t5",
      "cost": 5.14719744,
      "runtime": 3.779
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    z__divider_0,\n    aws_tags_value,\n    z__divider_1,\n    aws_resourceid,\n    aws_totalcost_1\nFROM\n    (SELECT\n            CASE WHEN (aws_tags.value ) IS NULL THEN 0 ELSE 1 END AS z__divider_0,\n            aws_tags.value  AS aws_tags_value,\n                CASE WHEN (aws.resourceid ) IS NULL THEN 0 ELSE 1 END AS z__divider_1,\n            aws.resourceid  AS aws_resourceid,\n            ROUND(COALESCE(CAST( ( SUM(DISTINCT (CAST(ROUND(COALESCE(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  \n            aws.unblendedcost\n            ELSE NULL END\n,0)*(1/1000*1.0), 9) AS NUMERIC) + (cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 1, 15)) as int64) as numeric) * 4294967296 + cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 16, 8)) as int64) as numeric)) * 0.000000001 )) - SUM(DISTINCT (cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 1, 15)) as int64) as numeric) * 4294967296 + cast(cast(concat('0x', substr(to_hex(md5(CAST(CASE WHEN  ((CASE\n            WHEN\n              aws.usagestartdate < CURRENT_TIMESTAMP\n            AND\n              aws.usagestartdate >= TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL  '365' DAY)\n            THEN 'This Period'\n            WHEN\n              aws.usagestartdate < TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY)\n              AND\n              aws.usagestartdate >= TIMESTAMP_SUB(TIMESTAMP_SUB(CURRENT_TIMESTAMP, INTERVAL '365' DAY), INTERVAL '365' DAY)\n              THEN 'Previous Period'\n          END) = 'This Period')  THEN  aws.pk   ELSE NULL END\n AS STRING))), 16, 8)) as int64) as numeric)) * 0.000000001) )  / (1/1000*1.0) AS FLOAT64), 0), 6) AS aws_totalcost_1\n        FROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \n        WHERE (\n            aws.productname\n          ) = 'Amazon Relational Database Service' AND (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) IN ('AWS_TEG', 'aws_cloudplatform_prod@tylertech.com') AND (aws_tags.key ) IN ('user_Product', 'user_product') AND (\n        true\n    )\n        GROUP BY\n            ROLLUP(z__divider_0, aws_tags_value, z__divider_1, aws_resourceid)\n        ORDER BY\n            z__divider_0 IS NULL,\n            z__divider_0,\n            2,\n            5 DESC,\n            z__divider_1 IS NULL,\n            z__divider_1,\n            4\n        LIMIT 2000) AS t5",
      "cost": 5.14719744,
      "runtime": 3.411
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    aws_tags.key  AS aws_tags_key,\n    aws_tags.value  AS aws_tags_value,\n    aws.serviceName AS aws_aws_servicecode_simplified,\n    CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END  AS aws_aws_usageaccountid,\n    aws.resourceid  AS aws_resourceid\nFROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \nWHERE (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) = 'AWS_TEG' AND (aws_tags.key ) = 'user_Product' AND (\n        true\n    ) AND (\n            aws.productname\n          ) IS NOT NULL\nGROUP BY\n    1,\n    2,\n    3,\n    4,\n    5\nORDER BY\n    2 DESC,\n    5 DESC\nLIMIT 5000",
      "cost": 5.01777170432,
      "runtime": 4.226
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END  AS aws_aws_usageaccountid,\n    \n            aws.productname\n           AS aws_aws_servicecode,\n    aws.resourceid  AS aws_resourceid,\n    aws_tags.value  AS aws_tags_value\nFROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \nWHERE (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) IN ('AWS_TEG', 'aws_cloudplatform_prod@tylertech.com') AND (aws_tags.key ) = 'user_product_1' AND (\n        true\n    )\nGROUP BY\n    1,\n    2,\n    3,\n    4\nORDER BY\n    1\nLIMIT 5000",
      "cost": 4.99063455744,
      "runtime": 4.322
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END  AS aws_aws_usageaccountid,\n    \n            aws.productname\n           AS aws_aws_servicecode,\n    aws.resourceid  AS aws_resourceid,\n    aws_tags.value  AS aws_tags_value\nFROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \nWHERE (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) IN ('AWS_TEG', 'aws_cloudplatform_prod@tylertech.com') AND (aws_tags.key ) = 'user_product_1' AND (\n        true\n    )\nGROUP BY\n    1,\n    2,\n    3,\n    4\nORDER BY\n    1\nLIMIT 5000",
      "cost": 4.98873663488,
      "runtime": 5.676
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END  AS aws_aws_usageaccountid,\n    \n            aws.productname\n           AS aws_aws_servicecode,\n    aws.resourceid  AS aws_resourceid,\n    aws_tags.value  AS aws_tags_value\nFROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \nWHERE (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) IN ('AWS_TEG', 'aws_cloudplatform_prod@tylertech.com') AND (aws_tags.key ) = 'user_product_1' AND (\n        true\n    )\nGROUP BY\n    1,\n    2,\n    3,\n    4\nORDER BY\n    1\nLIMIT 5000",
      "cost": 4.98873663488,
      "runtime": 9.138
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END  AS aws_aws_usageaccountid,\n    \n            aws.productname\n           AS aws_aws_servicecode,\n    aws.resourceid  AS aws_resourceid,\n    aws_tags.value  AS aws_tags_value\nFROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \nWHERE (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) IN ('AWS_TEG', 'aws_cloudplatform_prod@tylertech.com') AND (aws_tags.key ) = 'user_product_1' AND (\n        true\n    )\nGROUP BY\n    1,\n    2,\n    3,\n    4\nORDER BY\n    1\nLIMIT 5000",
      "cost": 4.98101387264,
      "runtime": 4.942
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    aws_tags.key  AS aws_tags_key,\n    aws_tags.value  AS aws_tags_value,\n    CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END  AS aws_aws_usageaccountid,\n    aws.resourceid  AS aws_resourceid,\n    \n            aws.productname\n           AS aws_aws_servicecode\nFROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \nWHERE (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) = 'AWS_TEG' AND (aws_tags.key ) IN ('user_Product', 'user_product') AND (aws_tags.value ) = 'virtualgov' AND (\n        true\n    ) AND (\n            aws.productname\n          ) IS NOT NULL\nGROUP BY\n    1,\n    2,\n    3,\n    4,\n    5\nORDER BY\n    2 DESC,\n    4 DESC\nLIMIT 5000",
      "cost": 4.94838218752,
      "runtime": 5.927
    },
    {
      "userID": "harness-looker@ce-prod-274307.iam.gserviceaccount.com",
      "query": "WITH aws AS (SELECT *, GENERATE_UUID() AS pk FROM\n    \n    `BillingReport_nvsv7gjbtzya3cgsgxnocg.awscur_*`\n    )\nSELECT\n    aws_tags.key  AS aws_tags_key,\n    aws_tags.value  AS aws_tags_value,\n    CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END  AS aws_aws_usageaccountid,\n    aws.resourceid  AS aws_resourceid,\n    \n            aws.productname\n           AS aws_aws_servicecode\nFROM aws\nLEFT JOIN UNNEST(aws.tags) as aws_tags  \nLEFT JOIN (SELECT infraAccountId, accountName FROM `harness.awstruthtable` GROUP BY infraAccountId, accountName) as awstruthtable ON awstruthtable.infraAccountId = aws.usageaccountid \nWHERE (CASE\n          WHEN awstruthtable.accountName IS NOT NULL\n            THEN awstruthtable.accountName\n          ELSE aws.usageaccountid\n         END ) = 'AWS_TEG' AND (aws_tags.key ) IN ('user_Product', 'user_product', 'user_product_1') AND (aws_tags.value ) = 'virtualgov' AND (\n        true\n    ) AND (\n            aws.productname\n          ) IS NOT NULL\nGROUP BY\n    1,\n    2,\n    3,\n    4,\n    5\nORDER BY\n    4 DESC\nLIMIT 5000",
      "cost": 4.94838218752,
      "runtime": 6.002
    }
  ],
  "metaData": null,
  "correlationId": "5fa65e80-0c8c-44b7-a7af-62d00201ebea"
}
